// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(MyPostApiContext))]
    [Migration("20221201132300_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorId");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Comment 1 ...",
                            CreatedDate = new DateTime(2022, 12, 1, 14, 22, 59, 946, DateTimeKind.Local).AddTicks(2122),
                            PostId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "Comment 2 ...",
                            CreatedDate = new DateTime(2022, 12, 1, 14, 22, 59, 946, DateTimeKind.Local).AddTicks(2125),
                            PostId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Content = "Comment 3 ...",
                            CreatedDate = new DateTime(2022, 12, 1, 14, 22, 59, 946, DateTimeKind.Local).AddTicks(2127),
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Comment 4 ...",
                            CreatedDate = new DateTime(2022, 12, 1, 14, 22, 59, 946, DateTimeKind.Local).AddTicks(2129),
                            PostId = 1,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Toute l'histoire des tables à café ...",
                            CreatedDate = new DateTime(2022, 12, 1, 14, 22, 59, 946, DateTimeKind.Local).AddTicks(1975),
                            Theme = "CULTURE",
                            Title = "Les tables à café",
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            Content = "Comment trouver de nouveaux meilleurs amis ...",
                            CreatedDate = new DateTime(2022, 12, 1, 14, 22, 59, 946, DateTimeKind.Local).AddTicks(2114),
                            Theme = "SOCIAL",
                            Title = "Les bons amis",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Content = "Comment gérer le bus des Yankees ...",
                            CreatedDate = new DateTime(2022, 12, 1, 14, 22, 59, 946, DateTimeKind.Local).AddTicks(2117),
                            Theme = "SPORT",
                            Title = "Yankee's Stadium",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "Les comédies club de NY ...",
                            CreatedDate = new DateTime(2022, 12, 1, 14, 22, 59, 946, DateTimeKind.Local).AddTicks(2119),
                            Theme = "CULTURE",
                            Title = "Les comédies club",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Jerry.Seinfeld@aol.com",
                            FirstName = "Jerry",
                            LastName = "Seinfeld",
                            Password = "password"
                        },
                        new
                        {
                            Id = 2,
                            Email = "George.Costanza@aol.com",
                            FirstName = "George",
                            LastName = "Costanza",
                            Password = "george"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Elaine.Benes@aol.com",
                            FirstName = "Elaine",
                            LastName = "Benes",
                            Password = "jerry"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Cosmo.Kramer@aol.com",
                            FirstName = "Cosmo",
                            LastName = "Kramer",
                            Password = "qzerty"
                        });
                });

            modelBuilder.Entity("Entities.Comment", b =>
                {
                    b.HasOne("Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");

                    b.HasOne("Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Post", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
